name: Docker image CI
on: [push, pull_request]

env:
  packer_version: '1.7.3'
  image_name: 'packer-ansible'

jobs:
  lint:
    name: Lint Dockerfile
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: Dockerfile

  build:
    name: Image build
    needs: lint
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ env.image_name }}
          outputs: type=docker,dest=/tmp/${{ env.image_name }}.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.image_name }}
          path: /tmp/${{ env.image_name }}.tar

  scan:
    name: Image test
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.image_name }}
          path: /tmp
      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '/tmp/${{ env.image_name }}.tar'
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  test:
    name: Image test
    needs: build
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.image_name }}
          path: /tmp
      - name: Test container execution
        run: |
          docker run /tmp/${{ env.image_name }}.tar version | grep 'Packer v${{ env.packer_version }}'

  push:
    name: Publish image on dockerhub
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [scan, test]
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set output
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: "mdmansur/${{ env.image_name }}:${{ steps.vars.outputs.tag }}"
          build-args: |
            PACKER_VERSION=${{ env.packer_version }}